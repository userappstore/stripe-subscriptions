
> @userappstore/stripe-subscriptions@1.0.1058 test /root/workspace/stripe-subscriptions
> NODE_ENV=testing mocha --recursive --timeout 180000 --slow 1 "src"



  proxy/x-customer-header
    Customer#AFTER
      ✓ should set customer data in header (2101ms)

  proxy/x-invoices-header
    Invoices#AFTER
      ✓ should set invoice data in header (16890ms)

  proxy/x-subscriptions-header
    Subscriptions#AFTER
      ✓ should set invoice data in header (10215ms)

  server/bind-customer
    BindCustomer#AFTER
      ✓ should bind existing customer data to req (2497ms)

  server/bind-stripekey
    BindStripeKey#AFTER
      ✓ should bind stripekey data to req (1760ms)

  server/require-payment
    RequirePayment#AFTER
      ✓ should allow non-customer through (1693ms)
      ✓ should allow unsubscribed customer through (2111ms)
      ✓ should allow owing customer access to /account/* (20366ms)
      ✓ should allow owing administrator access to /administrator/ (13233ms)
      ✓ should redirect owing customer (22247ms)
      ✓ should allow non-owing customer (10234ms)

  server/require-subscription
    RequireSubscription#AFTER
      ✓ should allow non-customer (1611ms)
      ✓ should allow customer without subscription access to /account/* (2226ms)
      ✓ should allow administrator without subscription access to /administrator/ (3778ms)
      ✓ should redirect unsubscribed customer to the plans list (2008ms)
      ✓ should allow customer with subscription to pass (10173ms)

  /account/subscriptions/cancel-subscription
    CancelSubscription#BEFORE
      ✓ should bind subscription to req (11189ms)
    CancelSubscription#GET
      ✓ should present the form (11027ms)
      ✓ should present the subscription table (11303ms)
    CancelSubscription#POST
      ✓ should apply after authorization (12493ms)

  /account/subscriptions/card
    Card#BEFORE
      ✓ should reject invalid card (2283ms)
      ✓ should reject other account's card (5853ms)
      ✓ should bind card to req (3947ms)
    Card#GET
      ✓ should have row for card (4499ms)

  /account/subscriptions/cards
    Cards#BEFORE
      ✓ should bind cards to req (8163ms)
    Cards#GET
      ✓ should enforce page size (9827ms)
      ✓ should enforce specified offset (9497ms)

  /account/subscriptions/change-plan
    ChangePlan#BEFORE
      ✓ should bind subscription to req (11495ms)
    ChangePlan#GET
      ✓ should present the form (11170ms)
      ✓ should present the subscription table (10754ms)
    ChangePlan#POST
      ✓ should reject same plan (11243ms)
      ✓ should reject never published plan (13196ms)
      ✓ should reject unpublished plan (14841ms)
      ✓ should reject paid plan without payment information (10536ms)
      ✓ should apply after authorization (15223ms)

  /account/subscriptions/delete-card
    DeleteCard#BEFORE
      ✓ should reject invalid cardid (6308ms)
      ✓ should reject other account's card (10031ms)
      ✓ should reject default payment source (8187ms)
      ✓ should bind card to req (6018ms)
    DeleteCard#GET
      ✓ should present the form (7729ms)
      ✓ should present the card table (5750ms)
    DeleteCard#POST
      ✓ should apply after authorization (6758ms)

  /account/subscriptions/edit-payment-information
    EditPaymentInformation#GET
      ✓ should present the form (2389ms)
    EditPaymentInformation#POST
      ✓ should require name (2354ms)
      ✓ should require CVC (2344ms)
      ✓ should require card number (2339ms)
      ✓ should require expiration month (2449ms)
      ✓ should require expiration year (2407ms)
      ✓ should apply after authorization (4010ms)

  /account/subscriptions
    Index#BEFORE
      ✓ should bind cards to req (4165ms)
      ✓ should bind invoices to req (12323ms)
      ✓ should bind subscriptions to req (10934ms)
    Index#GET
      ✓ should have row for each invoice (20745ms)
      ✓ should have row for each card (6640ms)
      ✓ should have row for each subscription (16043ms)

  /account/subscriptions/invoice
    Invoice#BEFORE
      ✓ should reject invalid invoice (4010ms)
      ✓ should reject other account's invoice (17621ms)
      ✓ should bind invoice to req (14423ms)
    Invoice#GET
      ✓ should have row for invoice (15830ms)

  /account/subscriptions/invoices
    Invoices#BEFORE
      ✓ should bind invoices to req (28795ms)
    Invoices#GET
      ✓ should enforce page size (36314ms)
      ✓ should enforce specified offset (37245ms)

  /account/subscriptions/pay-invoice
    PayInvoice#BEFORE
      ✓ should reject invalid invoice (2003ms)
      ✓ should reject other account's invoice (22512ms)
      ✓ should reject paid invoice (11933ms)
      ✓ should bind invoice to req (17965ms)
    PayInvoice#GET
      ✓ should present the form (19880ms)
      ✓ should present the invoice table (22234ms)
    PayInvoice#POST
      ✓ should apply after authorization (23703ms)

  /account/subscriptions/plan
    Plan#BEFORE
      ✓ should reject invalid plan (2564ms)
      ✓ should reject never published plan (6847ms)
      ✓ should reject unpublished plan (8346ms)
      ✓ should bind plan to req (7294ms)
    Plan#GET
      ✓ should have row for plan (6944ms)

  /account/subscriptions/plans
    Plans#BEFORE
      ✓ should bind plans to req (10067ms)
    Plans#GET
      ✓ should enforce page size (11670ms)
      ✓ should enforce specified offset (11118ms)

  /account/subscriptions/refund-invoice
    RefundInvoice#BEFORE
      ✓ should reject invalid invoice (3705ms)
      ✓ should reject other account's invoice (16966ms)
      ✓ should bind invoice to req (17807ms)
      ✓ should bind charge to req (16004ms)
    RefundInvoice#GET
      ✓ should present the form (15902ms)
      ✓ should present the invoice table (14190ms)
    RefundInvoice#PATCH
      ✓ should apply after authorization (18557ms)

  /account/subscriptions/start-subscription
    StartSubscription#BEFORE
      ✓ should reject invalid plan (2157ms)
      ✓ should reject never published plan (7919ms)
      ✓ should reject unpublished plan (9880ms)
      ✓ should bind plan to req (7899ms)
    StartSubscription#GET
      ✓ should present the form (8059ms)
      ✓ should present the plan table (8003ms)
    StartSubscription#POST
      ✓ should reject customer without card (6878ms)
      ✓ should reject duplicate subscription (13040ms)
      ✓ should apply after authorization (10499ms)

  /account/subscriptions/subscription
    Subscription#BEFORE
      ✓ should reject invalid subscription (2068ms)
      ✓ should reject other account's subscription (14256ms)
      ✓ should bind subscription to req (11923ms)
    Subscription#GET
      ✓ should present the subscription table (12870ms)

  /account/subscriptions/subscriptions
    Subscriptions#BEFORE
      ✓ should bind subscriptions to req (23003ms)
    Subscriptions#GET
      ✓ should enforce page size (26926ms)
      ✓ should enforce specified offset (26318ms)

  /administrator/subscriptions/charge
    Charge#BEFORE
      ✓ should reject invalid charge (4107ms)
      ✓ should bind charge to req (11588ms)
    Charge#GET
      ✓ should present the charge table (14587ms)

  /administrator/subscriptions/charges
    Charges#BEFORE
      ✓ should bind charges to req (27976ms)
    Charges#GET
      ✓ should enforce page size (45297ms)
      ✓ should enforce specified offset (32905ms)

  /administrator/subscriptions/coupon
    Coupon#BEFORE
      ✓ should reject invalid coupon (1952ms)
      ✓ should bind coupon to req (2778ms)
    Coupon#GET
      ✓ should present the coupon table (2810ms)

  /administrator/subscriptions/coupons
    Coupons#BEFORE
      ✓ should bind coupons to req (2755ms)
    Coupons#GET
      ✓ should enforce page size (5833ms)
      ✓ should enforce specified offset (6019ms)

  /administrator/subscriptions/create-coupon
    CreateCoupon#GET
      ✓ should present the form (1846ms)
    CreateCoupon#POST
      ✓ should reject missing couponid (1880ms)
      ✓ should enforce couponid length (1858ms)
      ✓ should reject duplicate couponid (2814ms)
      ✓ should reject missing duration (1729ms)
      ✓ should enforce invalid duration (1710ms)
      ✓ should require valid amount off (1746ms)
      ✓ should require valid percent off (1718ms)
      ✓ should require valid max redemptions (1725ms)
      ✓ should require amount or percent off (1725ms)
      ✓ should require valid duration in months if repeating (1724ms)
      ✓ should require valid expires if provided (1728ms)
      ✓ should create after authorization (2867ms)

  /administrator/subscriptions/create-plan
    CreatePlan#GET
      ✓ should present the form (1795ms)
    CreatePlan#POST
      ✓ should reject missing planid (1840ms)
      ✓ should enforce planid length (3048ms)
      ✓ should reject missing productid (1683ms)
      ✓ should reject never published product (3541ms)
      ✓ should reject unpublished product (4808ms)
      ✓ should reject missing currency (2827ms)
      ✓ should reject invalid currency (2792ms)
      ✓ should reject missing amount (2763ms)
      ✓ should reject invalid amount (2755ms)
      ✓ should reject missing interval (2770ms)
      ✓ should reject invalid interval (2901ms)
      ✓ should reject invalid interval_count (2938ms)
      ✓ should reject invalid trial_period_days (3665ms)
      ✓ should create after authorization (4839ms)

  /administrator/subscriptions/create-product
    CreateProduct#GET
      ✓ should present the form (1620ms)
    CreateProduct#POST
      ✓ should reject missing name (1627ms)
      ✓ should enforce name length (1617ms)
      ✓ should reject missing statement_descriptor (1673ms)
      ✓ should create after authorization (2497ms)

  /administrator/subscriptions/customer
    Customer#BEFORE
      ✓ should reject invalid customer (3975ms)
      ✓ should bind customer to req (4217ms)
    Customer#GET
      ✓ should present the customer table (3983ms)

  /administrator/subscriptions/customers
    Customers#BEFORE
      ✓ should bind customers to req (6477ms)
    Customers#GET
      ✓ should enforce page size (11259ms)
      ✓ should enforce specified offset (10763ms)

  /administrator/subscriptions/delete-coupon
    DeleteCoupon#BEFORE
      ✓ should reject invalid couponid (1942ms)
      ✓ should bind coupon to req (2963ms)
    DeleteCoupon#GET
      ✓ should present the form (3079ms)
      ✓ should present the coupon table (2981ms)
    DeleteCoupon#POST
      ✓ should apply after authorization (4510ms)

  /administrator/subscriptions/delete-plan
    DeletePlan#BEFORE
      ✓ should reject invalid planid (2075ms)
      ✓ should bind plan to req (4360ms)
    DeletePlan#GET
      ✓ should present the form (4546ms)
      ✓ should present the plan table (4420ms)
    DeletePlan#POST
      ✓ should apply after authorization (5880ms)

  /administrator/subscriptions/delete-product
    DeleteProduct#BEFORE
      ✓ should reject invalid productid (2052ms)
      ✓ should bind product to req (2763ms)
    DeleteProduct#GET
      ✓ should present the form (2958ms)
      ✓ should present the product table (2750ms)
    DeleteProduct#POST
      ✓ should apply after authorization (4639ms)

  /administrator/subscriptions/delete-subscription
    DeleteSubscription#BEFORE
      ✓ should reject invalid subscriptionid (2180ms)
      ✓ should bind subscription to req (10648ms)
    DeleteSubscription#GET
      ✓ should present the form (10984ms)
      ✓ should present the subscription table (10863ms)
    DeleteSubscription#POST
      ✓ should apply after authorization (12208ms)

  /administrator/subscriptions/edit-plan
    EditPlan#BEFORE
      ✓ should reject invalid planid (1921ms)
      ✓ should reject unpublished plan (5513ms)
      ✓ should bind plan to req (4952ms)
    EditPlan#GET
      ✓ should present the form (4610ms)
    EditPlan#POST
      ✓ should reject missing productid (4538ms)
      ✓ should reject never published product (6745ms)
      ✓ should reject unpublished product (7837ms)
      ✓ should reject invalid trial period (6288ms)
      ✓ should update after authorization (7801ms)

  /administrator/subscriptions/edit-product
    EditProduct#BEFORE
      ✓ should reject invalid productid (2114ms)
      ✓ should reject unpublished product (4468ms)
      ✓ should bind product to req (3063ms)
    EditProduct#GET
      ✓ should present the form (2812ms)
    EditProduct#POST
      ✓ should reject missing name (2729ms)
      ✓ should enforce name length (3038ms)
      ✓ should reject missing statement_descriptor (2760ms)
      ✓ should reject invalid unit_label (2821ms)
      ✓ should update after authorization (3944ms)

  /administrator/subscriptions/flag-charge
    FlagCharge#BEFORE
      ✓ should reject invalid chargeid (1970ms)
      ✓ should reject unrefunded charge (15686ms)
      ✓ should bind charge to req (18887ms)
    FlagCharge#GET
      ✓ should present the form (17240ms)
      ✓ should present the charge table (17725ms)
    FlagCharge#POST
      ✓ should apply after authorization (21005ms)

  /administrator/subscriptions/forgive-invoice
    ForgiveInvoice#BEFORE
      ✓ should reject invalid invoiceid (1915ms)
      ✓ should reject paid invoice (14790ms)
      ✓ should reject forgiven invoice (20609ms)
      ✓ should bind invoice to req (21398ms)
    ForgiveInvoice#GET
      ✓ should present the form (24015ms)
      ✓ should present the invoice table (18424ms)
    ForgiveInvoice#POST
      ✓ should apply after authorization (21888ms)

  /administrator/subscriptions
    Index#BEFORE
      ✓ should bind plans to req (4483ms)
      ✓ should bind subscriptions to req (10597ms)
      ✓ should bind coupons to req (3013ms)
    Index#GET
      ✓ should have row for each plan (6351ms)
      ✓ should have row for each coupon (3869ms)
      ✓ should have row for each subscription (19179ms)

  /administrator/subscriptions/invoice
    Invoice#BEFORE
      ✓ should reject invalid invoiceid (2002ms)
      ✓ should bind invoice to req (16605ms)
    Invoice#GET
      ✓ should present the invoice table (14978ms)

  /administrator/subscriptions/invoices
    Invoices#BEFORE
      ✓ should bind invoices to req (30615ms)
    Invoices#GET
      ✓ should enforce page size (39803ms)
      ✓ should enforce specified offset (39643ms)

  /administrator/subscriptions/payout
    Payout#BEFORE
      ✓ should bind reject invalid payoutid (1929ms)
      ✓ should bind payout to req (5126ms)
    Payout#GET
      ✓ should have row for payout (4655ms)

  /administrator/subscriptions/payouts
    Payouts#BEFORE
      ✓ should bind payouts to req (9820ms)
    Payouts#GET
      ✓ should enforce page size (25851ms)
      ✓ should enforce specified offset (26810ms)

  /administrator/subscriptions/plan
    Plan#BEFORE
      ✓ should reject invalid planid (1959ms)
      ✓ should bind plan to req (4400ms)
    Plan#GET
      ✓ should present the plan table (4364ms)

  /administrator/subscriptions/plans
    Plans#BEFORE
      ✓ should bind plans to req (4261ms)
    Plans#GET
      ✓ should enforce page size (9493ms)
      ✓ should enforce specified offset (9519ms)

  /administrator/subscriptions/product
    Product#BEFORE
      ✓ should reject invalid productid (2296ms)
      ✓ should bind product to req (2894ms)
    Product#GET
      ✓ should have row for product (2888ms)

  /administrator/subscriptions/products
    Products#BEFORE
      ✓ should bind products to req (2753ms)
    Products#GET
      ✓ should enforce page size (6191ms)
      ✓ should enforce specified offset (5742ms)

  /administrator/subscriptions/publish-coupon
    PublishCoupon#BEFORE
      ✓ should reject invalid couponid (1994ms)
      ✓ should reject published coupon (2739ms)
      ✓ should bind coupon to req (3027ms)
    PublishCoupon#GET
      ✓ should present the form (2933ms)
      ✓ should present the coupon table (3230ms)
    PublishCoupon#POST
      ✓ should apply after authorization (4834ms)

  /administrator/subscriptions/publish-plan
    PublishPlan#BEFORE
      ✓ should reject invalid planid (2009ms)
      ✓ should reject published plan (4393ms)
      ✓ should bind plan to req (4410ms)
    PublishPlan#GET
      ✓ should present the form (4526ms)
      ✓ should present the plan table (4644ms)
    PublishPlan#POST
      ✓ should apply after authorization (6364ms)

  /administrator/subscriptions/publish-product
    PublishProduct#BEFORE
      ✓ should reject invalid productid (1944ms)
      ✓ should reject published product (2888ms)
      ✓ should bind product to req (3003ms)
    PublishProduct#GET
      ✓ should present the form (3042ms)
      ✓ should present the product table (2973ms)
    PublishProduct#POST
      ✓ should apply after authorization (4345ms)

  /administrator/subscriptions/refund-charge
    RefundCharge#BEFORE
      ✓ should reject invalid chargeid (1939ms)
      ✓ should reject refunded charge (17536ms)
      ✓ should bind charge to req (14144ms)
    RefundCharge#GET
      ✓ should present the form (13125ms)
      ✓ should present the charge table (15304ms)
    RefundCharge#POST
      ✓ should apply after authorization (15649ms)

  /administrator/subscriptions/refund
    Refund#BEFORE
      ✓ should reject invalid refundid (1936ms)
      ✓ should bind refund to req (16425ms)
    Refund#GET
      ✓ should have row for refund (16319ms)

  /administrator/subscriptions/refunds
    Refunds#BEFORE
      ✓ should bind refunds to req (47194ms)
    Refunds#GET
      ✓ should enforce page size (69968ms)
      ✓ should enforce specified offset (67281ms)

  /administrator/subscriptions/subscription
    Subscription#BEFORE
      ✓ should reject invalid subscriptionid (1991ms)
      ✓ should bind subscription to req (10362ms)
    Subscription#GET
      ✓ should present the subscription table (10116ms)

  /administrator/subscriptions/subscriptions
    Subscriptions#BEFORE
      ✓ should bind subscriptions to req (17854ms)
    Subscriptions#GET
