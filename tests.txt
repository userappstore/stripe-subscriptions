
> @userappstore/stripe-subscriptions@1.0.1058 test /root/workspace/stripe-subscriptions
> NODE_ENV=testing mocha --recursive --timeout 180000 --slow 1 "src"



  proxy/x-customer-header
    Customer#AFTER
      ✓ should set customer data in header (2164ms)

  proxy/x-invoices-header
    Invoices#AFTER
      ✓ should set invoice data in header (15812ms)

  proxy/x-subscriptions-header
    Subscriptions#AFTER
      ✓ should set invoice data in header (10118ms)

  server/bind-customer
    BindCustomer#AFTER
      ✓ should bind existing customer data to req (2400ms)

  server/bind-stripekey
    BindStripeKey#AFTER
      ✓ should bind stripekey data to req (1611ms)

  server/require-payment
    RequirePayment#AFTER
      ✓ should allow non-customer through (1607ms)
      ✓ should allow unsubscribed customer through (2065ms)
      ✓ should allow owing customer access to /account/* (17643ms)
      ✓ should allow owing administrator access to /administrator/ (12930ms)
      ✓ should redirect owing customer (20116ms)
      ✓ should allow non-owing customer (9834ms)

  server/require-subscription
    RequireSubscription#AFTER
      ✓ should allow non-customer (1642ms)
      ✓ should allow customer without subscription access to /account/* (2103ms)
      ✓ should allow administrator without subscription access to /administrator/ (3775ms)
      ✓ should redirect unsubscribed customer to the plans list (2096ms)
      ✓ should allow customer with subscription to pass (10886ms)

  /account/subscriptions/cancel-subscription
    CancelSubscription#BEFORE
      ✓ should bind subscription to req (10824ms)
    CancelSubscription#GET
      ✓ should present the form (12115ms)
      ✓ should present the subscription table (10697ms)
    CancelSubscription#POST
      ✓ should apply after authorization (11896ms)

  /account/subscriptions/card
    Card#BEFORE
      ✓ should reject invalid card (1985ms)
      ✓ should reject other account's card (5786ms)
      ✓ should bind card to req (3923ms)
    Card#GET
      ✓ should have row for card (4136ms)

  /account/subscriptions/cards
    Cards#BEFORE
      ✓ should bind cards to req (7752ms)
    Cards#GET
      ✓ should enforce page size (10719ms)
      ✓ should enforce specified offset (10362ms)

  /account/subscriptions/change-plan
    ChangePlan#BEFORE
      ✓ should bind subscription to req (11262ms)
    ChangePlan#GET
      ✓ should present the form (11611ms)
      ✓ should present the subscription table (11358ms)
    ChangePlan#POST
      ✓ should reject same plan (11664ms)
      ✓ should reject never published plan (13474ms)
      ✓ should reject unpublished plan (13976ms)
      ✓ should reject paid plan without payment information (10677ms)
      ✓ should apply after authorization (15716ms)

  /account/subscriptions/delete-card
    DeleteCard#BEFORE
      ✓ should reject invalid cardid (6075ms)
      ✓ should reject other account's card (9751ms)
      ✓ should reject default payment source (8195ms)
      ✓ should bind card to req (5552ms)
    DeleteCard#GET
      ✓ should present the form (7513ms)
      ✓ should present the card table (5531ms)
    DeleteCard#POST
      ✓ should apply after authorization (6916ms)

  /account/subscriptions/edit-payment-information
    EditPaymentInformation#GET
      ✓ should present the form (2200ms)
    EditPaymentInformation#POST
      ✓ should require name (2395ms)
      ✓ should require CVC (2190ms)
      ✓ should require card number (2149ms)
      ✓ should require expiration month (2192ms)
      ✓ should require expiration year (2149ms)
      ✓ should apply after authorization (3731ms)

  /account/subscriptions
    Index#BEFORE
      ✓ should bind cards to req (4130ms)
      ✓ should bind invoices to req (12427ms)
      ✓ should bind subscriptions to req (10776ms)
    Index#GET
      ✓ should have row for each invoice (37270ms)
      ✓ should have row for each card (6060ms)
      ✓ should have row for each subscription (15741ms)

  /account/subscriptions/invoice
    Invoice#BEFORE
      ✓ should reject invalid invoice (3705ms)
      ✓ should reject other account's invoice (16572ms)
      ✓ should bind invoice to req (24549ms)
    Invoice#GET
      ✓ should have row for invoice (14188ms)

  /account/subscriptions/invoices
    Invoices#BEFORE
      ✓ should bind invoices to req (29102ms)
    Invoices#GET
      ✓ should enforce page size (40134ms)
      ✓ should enforce specified offset (36949ms)

  /account/subscriptions/pay-invoice
    PayInvoice#BEFORE
      ✓ should reject invalid invoice (2043ms)
      ✓ should reject other account's invoice (23818ms)
      ✓ should reject paid invoice (15742ms)
      ✓ should bind invoice to req (16832ms)
    PayInvoice#GET
      ✓ should present the form (24433ms)
      ✓ should present the invoice table (19883ms)
    PayInvoice#POST
      ✓ should apply after authorization (21814ms)

  /account/subscriptions/plan
    Plan#BEFORE
      ✓ should reject invalid plan (2497ms)
      ✓ should reject never published plan (6330ms)
      ✓ should reject unpublished plan (7481ms)
      ✓ should bind plan to req (6514ms)
    Plan#GET
      ✓ should have row for plan (6883ms)

  /account/subscriptions/plans
    Plans#BEFORE
      ✓ should bind plans to req (9643ms)
    Plans#GET
      ✓ should enforce page size (13039ms)
      ✓ should enforce specified offset (11630ms)

  /account/subscriptions/refund-invoice
    RefundInvoice#BEFORE
      ✓ should reject invalid invoice (3880ms)
      ✓ should reject other account's invoice (16458ms)
      ✓ should bind invoice to req (16705ms)
      ✓ should bind charge to req (14362ms)
    RefundInvoice#GET
      ✓ should present the form (15502ms)
      ✓ should present the invoice table (13255ms)
    RefundInvoice#PATCH
      ✓ should apply after authorization (19258ms)

  /account/subscriptions/start-subscription
    StartSubscription#BEFORE
      ✓ should reject invalid plan (2145ms)
      ✓ should reject never published plan (8013ms)
      ✓ should reject unpublished plan (9180ms)
      ✓ should bind plan to req (8179ms)
    StartSubscription#GET
      ✓ should present the form (8404ms)
      ✓ should present the plan table (8588ms)
    StartSubscription#POST
      ✓ should reject customer without card (7097ms)
      ✓ should reject duplicate subscription (13406ms)
      ✓ should apply after authorization (11063ms)

  /account/subscriptions/subscription
    Subscription#BEFORE
      ✓ should reject invalid subscription (2131ms)
      ✓ should reject other account's subscription (13128ms)
      ✓ should bind subscription to req (14698ms)
    Subscription#GET
      ✓ should present the subscription table (12400ms)

  /account/subscriptions/subscriptions
    Subscriptions#BEFORE
      ✓ should bind subscriptions to req (17111ms)
    Subscriptions#GET
      ✓ should enforce page size (26555ms)
      ✓ should enforce specified offset (26649ms)

  /administrator/subscriptions/charge
    Charge#BEFORE
      ✓ should reject invalid charge (4490ms)
      ✓ should bind charge to req (13285ms)
    Charge#GET
      ✓ should present the charge table (14012ms)

  /administrator/subscriptions/charges
    Charges#BEFORE
      ✓ should bind charges to req (16902ms)
    Charges#GET
      ✓ should enforce page size (39979ms)
      ✓ should enforce specified offset (38021ms)

  /administrator/subscriptions/coupon
    Coupon#BEFORE
      ✓ should reject invalid coupon (1918ms)
      ✓ should bind coupon to req (2797ms)
    Coupon#GET
      ✓ should present the coupon table (2801ms)

  /administrator/subscriptions/coupons
    Coupons#BEFORE
      ✓ should bind coupons to req (3037ms)
    Coupons#GET
      ✓ should enforce page size (5913ms)
      ✓ should enforce specified offset (5555ms)

  /administrator/subscriptions/create-coupon
    CreateCoupon#GET
      ✓ should present the form (1759ms)
    CreateCoupon#POST
      ✓ should reject missing couponid (1704ms)
      ✓ should enforce couponid length (1730ms)
      ✓ should reject duplicate couponid (2789ms)
      ✓ should reject missing duration (1770ms)
      ✓ should enforce invalid duration (1734ms)
      ✓ should require valid amount off (1724ms)
      ✓ should require valid percent off (1736ms)
      ✓ should require valid max redemptions (1757ms)
      ✓ should require amount or percent off (1818ms)
      ✓ should require valid duration in months if repeating (1688ms)
      ✓ should require valid expires if provided (1735ms)
      ✓ should create after authorization (2764ms)

  /administrator/subscriptions/create-plan
    CreatePlan#GET
      ✓ should present the form (1733ms)
    CreatePlan#POST
      ✓ should reject missing planid (1770ms)
      ✓ should enforce planid length (2791ms)
      ✓ should reject missing productid (1650ms)
      ✓ should reject never published product (3060ms)
      ✓ should reject unpublished product (4240ms)
      ✓ should reject missing currency (2807ms)
      ✓ should reject invalid currency (2743ms)
      ✓ should reject missing amount (2860ms)
      ✓ should reject invalid amount (2732ms)
      ✓ should reject missing interval (2882ms)
      ✓ should reject invalid interval (2863ms)
      ✓ should reject invalid interval_count (3061ms)
      ✓ should reject invalid trial_period_days (3415ms)
      ✓ should create after authorization (4371ms)

  /administrator/subscriptions/create-product
    CreateProduct#GET
      ✓ should present the form (1626ms)
    CreateProduct#POST
      ✓ should reject missing name (1718ms)
      ✓ should enforce name length (1875ms)
      ✓ should reject missing statement_descriptor (1619ms)
      ✓ should create after authorization (2668ms)

  /administrator/subscriptions/customer
    Customer#BEFORE
      ✓ should reject invalid customer (4030ms)
      ✓ should bind customer to req (3991ms)
    Customer#GET
      ✓ should present the customer table (4435ms)

  /administrator/subscriptions/customers
    Customers#BEFORE
      ✓ should bind customers to req (6608ms)
    Customers#GET
      ✓ should enforce page size (11021ms)
      ✓ should enforce specified offset (10597ms)

  /administrator/subscriptions/delete-coupon
    DeleteCoupon#BEFORE
      ✓ should reject invalid couponid (1929ms)
      ✓ should bind coupon to req (2939ms)
    DeleteCoupon#GET
      ✓ should present the form (2745ms)
      ✓ should present the coupon table (2962ms)
    DeleteCoupon#POST
      ✓ should apply after authorization (4589ms)

  /administrator/subscriptions/delete-plan
    DeletePlan#BEFORE
      ✓ should reject invalid planid (2012ms)
      ✓ should bind plan to req (4494ms)
    DeletePlan#GET
      ✓ should present the form (4407ms)
      ✓ should present the plan table (4251ms)
    DeletePlan#POST
      ✓ should apply after authorization (5743ms)

  /administrator/subscriptions/delete-product
    DeleteProduct#BEFORE
      ✓ should reject invalid productid (1953ms)
      ✓ should bind product to req (2821ms)
    DeleteProduct#GET
      ✓ should present the form (2758ms)
      ✓ should present the product table (2904ms)
    DeleteProduct#POST
      ✓ should apply after authorization (4288ms)

  /administrator/subscriptions/delete-subscription
    DeleteSubscription#BEFORE
      ✓ should reject invalid subscriptionid (2085ms)
      ✓ should bind subscription to req (10348ms)
    DeleteSubscription#GET
      ✓ should present the form (10874ms)
      ✓ should present the subscription table (10342ms)
    DeleteSubscription#POST
      ✓ should apply after authorization (11956ms)

  /administrator/subscriptions/edit-plan
    EditPlan#BEFORE
      ✓ should reject invalid planid (1921ms)
      ✓ should reject unpublished plan (5441ms)
      ✓ should bind plan to req (4645ms)
    EditPlan#GET
      ✓ should present the form (5370ms)
    EditPlan#POST
      ✓ should reject missing productid (5261ms)
      ✓ should reject never published product (6278ms)
      ✓ should reject unpublished product (7840ms)
      ✓ should reject invalid trial period (5651ms)
      ✓ should update after authorization (7583ms)

  /administrator/subscriptions/edit-product
    EditProduct#BEFORE
      ✓ should reject invalid productid (1924ms)
      ✓ should reject unpublished product (4040ms)
      ✓ should bind product to req (2908ms)
    EditProduct#GET
      ✓ should present the form (2750ms)
    EditProduct#POST
      ✓ should reject missing name (2863ms)
      ✓ should enforce name length (2730ms)
      ✓ should reject missing statement_descriptor (2731ms)
      ✓ should reject invalid unit_label (2740ms)
      ✓ should update after authorization (4537ms)

  /administrator/subscriptions/flag-charge
    FlagCharge#BEFORE
      ✓ should reject invalid chargeid (2034ms)
      ✓ should reject unrefunded charge (14287ms)
      ✓ should bind charge to req (19511ms)
    FlagCharge#GET
      ✓ should present the form (17422ms)
      ✓ should present the charge table (19360ms)
    FlagCharge#POST
      ✓ should apply after authorization (21003ms)

  /administrator/subscriptions/forgive-invoice
    ForgiveInvoice#BEFORE
      ✓ should reject invalid invoiceid (2155ms)
      ✓ should reject paid invoice (14781ms)
      ✓ should reject forgiven invoice (26281ms)
      ✓ should bind invoice to req (17178ms)
    ForgiveInvoice#GET
      ✓ should present the form (19609ms)
      ✓ should present the invoice table (19437ms)
    ForgiveInvoice#POST
      ✓ should apply after authorization (21942ms)

  /administrator/subscriptions
    Index#BEFORE
      ✓ should bind plans to req (4239ms)
      ✓ should bind subscriptions to req (11165ms)
      ✓ should bind coupons to req (2885ms)
    Index#GET
      ✓ should have row for each plan (6362ms)
      ✓ should have row for each coupon (3927ms)
      ✓ should have row for each subscription (20287ms)

  /administrator/subscriptions/invoice
    Invoice#BEFORE
      ✓ should reject invalid invoiceid (2003ms)
      ✓ should bind invoice to req (11990ms)
    Invoice#GET
      ✓ should present the invoice table (24960ms)

  /administrator/subscriptions/invoices
    Invoices#BEFORE
      ✓ should bind invoices to req (24608ms)
    Invoices#GET
      ✓ should enforce page size (34845ms)
      ✓ should enforce specified offset (47475ms)

  /administrator/subscriptions/payout
    Payout#BEFORE
      ✓ should bind reject invalid payoutid (2162ms)
      ✓ should bind payout to req (6556ms)
    Payout#GET
      ✓ should have row for payout (8919ms)

  /administrator/subscriptions/payouts
    Payouts#BEFORE
      ✓ should bind payouts to req (15044ms)
    Payouts#GET
      ✓ should enforce page size (24005ms)
      ✓ should enforce specified offset (28185ms)

  /administrator/subscriptions/plan
    Plan#BEFORE
      ✓ should reject invalid planid (2058ms)
      ✓ should bind plan to req (4224ms)
    Plan#GET
      ✓ should present the plan table (4482ms)

  /administrator/subscriptions/plans
    Plans#BEFORE
      ✓ should bind plans to req (4312ms)
    Plans#GET
      ✓ should enforce page size (10235ms)
      ✓ should enforce specified offset (9268ms)

  /administrator/subscriptions/product
    Product#BEFORE
      ✓ should reject invalid productid (1982ms)
      ✓ should bind product to req (2792ms)
    Product#GET
      ✓ should have row for product (2856ms)

  /administrator/subscriptions/products
    Products#BEFORE
      ✓ should bind products to req (2813ms)
    Products#GET
      ✓ should enforce page size (6249ms)
      ✓ should enforce specified offset (6476ms)

  /administrator/subscriptions/publish-coupon
    PublishCoupon#BEFORE
      ✓ should reject invalid couponid (2061ms)
      ✓ should reject published coupon (2885ms)
      ✓ should bind coupon to req (2740ms)
    PublishCoupon#GET
      ✓ should present the form (2812ms)
      ✓ should present the coupon table (2734ms)
    PublishCoupon#POST
      ✓ should apply after authorization (4467ms)

  /administrator/subscriptions/publish-plan
    PublishPlan#BEFORE
      ✓ should reject invalid planid (2002ms)
      ✓ should reject published plan (4291ms)
      ✓ should bind plan to req (4546ms)
    PublishPlan#GET
      ✓ should present the form (4347ms)
      ✓ should present the plan table (4385ms)
    PublishPlan#POST
      ✓ should apply after authorization (6072ms)

  /administrator/subscriptions/publish-product
    PublishProduct#BEFORE
      ✓ should reject invalid productid (2065ms)
      ✓ should reject published product (2775ms)
      ✓ should bind product to req (2885ms)
    PublishProduct#GET
      ✓ should present the form (2781ms)
      ✓ should present the product table (2915ms)
    PublishProduct#POST
      ✓ should apply after authorization (4569ms)

  /administrator/subscriptions/refund-charge
    RefundCharge#BEFORE
      ✓ should reject invalid chargeid (2050ms)
      ✓ should reject refunded charge (16504ms)
      ✓ should bind charge to req (14153ms)
    RefundCharge#GET
      ✓ should present the form (16965ms)
      ✓ should present the charge table (16802ms)
    RefundCharge#POST
      ✓ should apply after authorization (18518ms)

  /administrator/subscriptions/refund
    Refund#BEFORE
      ✓ should reject invalid refundid (1925ms)
      ✓ should bind refund to req (13670ms)
    Refund#GET
      ✓ should have row for refund (14133ms)

  /administrator/subscriptions/refunds
    Refunds#BEFORE
      ✓ should bind refunds to req (41716ms)
    Refunds#GET
      ✓ should enforce page size (74454ms)
      ✓ should enforce specified offset (72535ms)

  /administrator/subscriptions/subscription
    Subscription#BEFORE
      ✓ should reject invalid subscriptionid (2128ms)
      ✓ should bind subscription to req (10327ms)
    Subscription#GET
      ✓ should present the subscription table (10084ms)

  /administrator/subscriptions/subscriptions
    Subscriptions#BEFORE
      ✓ should bind subscriptions to req (18736ms)
    Subscriptions#GET
      ✓ should enforce page size (29422ms)
      ✓ should enforce specified offset (28688ms)

  /administrator/subscriptions/unpublish-coupon
    UnpublishCoupon#BEFORE
      ✓ should reject invalid couponid (2118ms)
      ✓ should reject never published coupon (2996ms)
      ✓ should reject unpublished coupon (4039ms)
      ✓ should bind coupon to req (2749ms)
    UnpublishCoupon#GET
      ✓ should present the form (2787ms)
      ✓ should present the coupon table (2758ms)
    UnpublishCoupon#POST
      ✓ should apply after authorization (4348ms)

  /administrator/subscriptions/unpublish-plan
    UnpublishPlan#BEFORE
      ✓ should reject invalid planid (1928ms)
      ✓ should never published plan (4697ms)
      ✓ should reject unpublished plan (5419ms)
      ✓ should bind plan to req (4308ms)
    UnpublishPlan#GET
      ✓ should present the form (4330ms)
      ✓ should present the plan table (4579ms)
    UnpublishPlan#POST
      ✓ should apply after authorization (6054ms)

  /administrator/subscriptions/unpublish-product
    ProductUnpublished#BEFORE
      ✓ should reject invalid productid (1926ms)
      ✓ should never published product (2823ms)
      ✓ should reject unpublished product (4068ms)
      ✓ should bind product to req (3009ms)
    ProductUnpublished#GET
      ✓ should present the form (2756ms)
      ✓ should present the product table (2772ms)
    ProductUnpublished#POST
      ✓ should apply after authorization (4499ms)

  /api/administrator/subscriptions/card-charges-count
    CardChargesCount#GET
      ✓ should count all charges on card (21765ms)

  /api/administrator/subscriptions/card-charges
    CardCharges#GET
      ✓ should limit charges on card to one page (29719ms)

  /api/administrator/subscriptions/card-invoices-count
    CardInvoicesCount#GET
      ✓ should count all invoices on card (25225ms)

  /api/administrator/subscriptions/card-invoices
    CardInvoices#GET
      ✓ should limit invoices on card to one page (23695ms)

  /api/administrator/subscriptions/card-refunds-count
    CardRefundsCount#GET
      ✓ should count all refunds on card (39103ms)

  /api/administrator/subscriptions/card-refunds
    CardRefunds#GET
      ✓ should limit refunds on card to one page (56332ms)

  /api/administrator/subscriptions/card
    Card#GET
      ✓ should reject invalid card (5166ms)
      ✓ should return card data (5677ms)

  /api/administrator/subscriptions/charge
    Charge#GET
      ✓ should reject invalid charge (1948ms)
      ✓ should return charge data (11263ms)

  /api/administrator/subscriptions/charges-count
    ChargesCount#GET
      ✓ should count charges (38953ms)

  /api/administrator/subscriptions/charges
    Charges#GET
      ✓ should limit charges to one page (34601ms)

  /api/administrator/subscriptions/coupon-customers-count
    CouponCustomersCount#GET
      ✓ should count all customers on coupon (13894ms)

  /api/administrator/subscriptions/coupon-customers
    CouponCustomers#GET
      ✓ should limit customers on coupon to one page (21223ms)

  /api/administrator/subscriptions/coupon-subscriptions-count
    CouponSubscriptionsCount#GET
      ✓ should count all subscriptions on coupon (25245ms)

  /api/administrator/subscriptions/coupon-subscriptions
    CouponSubscriptions#GET
      ✓ should limit subscriptions on coupon to one page (34425ms)

  /api/administrator/subscriptions/coupon
    Coupon#GET
      ✓ should reject invalid coupon (2225ms)
      ✓ should return coupon data (2789ms)

  /api/administrator/subscriptions/coupons-count
    CouponsCount#GET
      ✓ should count coupons (5945ms)

  /api/administrator/subscriptions/coupons
    Coupons#GET
      ✓ should limit coupons to one page (4817ms)

  /api/administrator/subscriptions/create-coupon
    CreateCoupon#POST
      ✓ should require alphanumeric_ id (1906ms)
      ✓ should require percent or amount off (1807ms)
      ✓ should require currency with amount off (1846ms)
      ✓ should require valid percent off (1829ms)
      ✓ should require valid duration (1839ms)
      ✓ should require valid repeating duration (1852ms)
      ✓ should require valid expire_meridien (1842ms)
      ✓ should require valid expire (1839ms)
      ✓ should create coupon (2749ms)
      ✓ should create published coupon (2789ms)

  /api/administrator/subscriptions/create-plan
    CreatePlan#POST
      ✓ should require alphanumeric id (2456ms)
      ✓ should require product (2462ms)
      ✓ should require valid product (1927ms)
      ✓ should require amount (2752ms)
      ✓ should require currency (2515ms)
      ✓ should require valid interval (2780ms)
      ✓ should require valid interval count (3030ms)
      ✓ should require valid trial period (2758ms)
      ✓ should create plan (3995ms)
      ✓ should create published plan (4114ms)

  /api/administrator/subscriptions/create-product
    CreateProduct#POST
      ✓ should require name (1612ms)
      ✓ should require statement_descriptor (1750ms)
      ✓ should create product (3987ms)
      ✓ should create published product (3561ms)

  /api/administrator/subscriptions/create-refund
    CreateRefund#POST
      ✓ should reject invalid charge (2054ms)
      ✓ should require amount (14603ms)
      ✓ should reject negative amount (17094ms)
      ✓ should reject amount higher than charge (14012ms)
      ✓ should create authorized refund (14903ms)

  /api/administrator/subscriptions/customer-cards-count
    CustomerCardsCount#GET
      ✓ should count all cards on customer (13134ms)

  /api/administrator/subscriptions/customer-cards
    CustomerCards#GET
      ✓ should limit cards on customer to one page (9657ms)

  /api/administrator/subscriptions/customer-charges-count
    CustomerChargesCount#GET
      ✓ should count all charges on customer (25605ms)

  /api/administrator/subscriptions/customer-charges
    CustomerCharges#GET
      ✓ should limit charges on customer to one page (32159ms)

  /api/administrator/subscriptions/customer-invoices-count
    CustomerInvoicesCount#GET
      ✓ should count all invoices on customer (15142ms)

  /api/administrator/subscriptions/customer-invoices
    CustomerInvoices#GET
      ✓ should limit invoices on customer to one page (25755ms)

  /api/administrator/subscriptions/customer-refunds-count
    CustomerRefundsCount#GET
      ✓ should count all refunds on customer (34334ms)

  /api/administrator/subscriptions/customer-refunds
    CustomerRefunds#GET
      ✓ should limit refunds on customer to one page (46677ms)

  /api/administrator/subscriptions/customer-subscriptions-count
    CustomerSubscriptionsCount#GET
      ✓ should count all subscriptions on customer (14213ms)

  /api/administrator/subscriptions/customer-subscriptions
    CustomerSubscriptions#GET
      ✓ should limit subscriptions on customer to one page (20716ms)

  /api/administrator/subscriptions/customer
    Customer#GET
      ✓ should reject invalid customer (2101ms)
      ✓ should return customer data (5494ms)

  /api/administrator/subscriptions/customers-count
    CustomersCount#GET
      ✓ should count customers (5908ms)

  /api/administrator/subscriptions/customers
    Customers#GET
      ✓ should limit customers to one page (8821ms)

  /api/administrator/subscriptions/delete-coupon
    DeleteCoupon#DELETE
      ✓ should reject invalid couponid (1933ms)
      ✓ should delete coupon (3754ms)

  /api/administrator/subscriptions/delete-plan
    DeletePlan#DELETE
      ✓ should reject invalid planid (1962ms)
      ✓ should delete plan (5319ms)

  /api/administrator/subscriptions/delete-product
    DeleteProduct#DELETE
      ✓ should reject invalid productid (1925ms)
      ✓ should delete product (3673ms)

  /api/administrator/subscriptions/delete-subscription
    DeleteSubscription#DELETE
      ✓ should reject invalid subscriptionid (2019ms)
      ✓ should require active subscription (13834ms)
      ✓ should delete subscription at period end (14966ms)
      ✓ should delete subscription immediately (14479ms)

  /api/administrator/subscriptions/invoice
    Invoice#GET
      ✓ should reject invalid invoice (1922ms)
      ✓ should return invoice data (12238ms)

  /api/administrator/subscriptions/invoices-count
    InvoicesCount#GET
      ✓ should count invoices (23011ms)

  /api/administrator/subscriptions/invoices
    Invoices#GET
      ✓ should limit invoices to one page (38070ms)

  /api/administrator/subscriptions/payout
    Payout#GET
      ✓ should reject invalid payoutid (1931ms)
      ✓ should return payout data (7766ms)

  /api/administrator/subscriptions/payouts-count
    PayoutsCount#GET
      ✓ should count payouts (18792ms)

  /api/administrator/subscriptions/payouts
    Payouts#GET
      ✓ should return limit payouts to one page (24950ms)

  /api/administrator/subscriptions/plan-charges-count
    PlanChargesCount#GET
      ✓ should count all charges on plan (22775ms)

  /api/administrator/subscriptions/plan-charges
    PlanCharges#GET
      ✓ should limit charges on plan to one page (45767ms)

  /api/administrator/subscriptions/plan-customers-count
    PlanCustomersCount#GET
      ✓ should count all customers on plan (24727ms)

  /api/administrator/subscriptions/plan-customers
    PlanCustomers#GET
      ✓ should limit customers on plan to one page (33868ms)

  /api/administrator/subscriptions/plan-invoices-count
    PlanInvoicesCount#GET
      ✓ should count all invoices on plan (21944ms)

  /api/administrator/subscriptions/plan-invoices
    PlanInvoices#GET
      ✓ should limit invoices on plan to one page (49841ms)

  /api/administrator/subscriptions/plan-refunds-count
    PlanRefundsCount#GET
      ✓ should count all refunds on plan (41211ms)

  /api/administrator/subscriptions/plan-refunds
    PlanRefunds#GET
      ✓ should limit refunds on plan to one page (53233ms)

  /api/administrator/subscriptions/plan-subscriptions-count
    PlanSubscriptionsCount#GET
      ✓ should count all subscriptions on plan (17126ms)

  /api/administrator/subscriptions/plan-subscriptions
    PlanSubscriptions#GET
      ✓ should limit subscriptions on plan to one page (25256ms)

  /api/administrator/subscriptions/plan
    Plan#GET
      ✓ should return plan data (4559ms)

  /api/administrator/subscriptions/plans-count
    PlansCount#GET
      ✓ should count plans (7121ms)

  /api/administrator/subscriptions/plans
    Plans#GET
      ✓ should limit plans to one page (11243ms)

  /api/administrator/subscriptions/product-charges-count
    ProductChargesCount#GET
      ✓ should count all charges on product (37193ms)

  /api/administrator/subscriptions/product-charges
    ProductCharges#GET
      ✓ should limit charges on product to one page (59215ms)

  /api/administrator/subscriptions/product-customers-count
    ProductCustomersCount#GET
      ✓ should count all customers on product (34706ms)

  /api/administrator/subscriptions/product-customers
    ProductCustomers#GET
      ✓ should limit customers on product to one page (33122ms)

  /api/administrator/subscriptions/product-invoices-count
    ProductInvoicesCount#GET
      ✓ should count all invoices on product (30353ms)

  /api/administrator/subscriptions/product-invoices
    ProductInvoices#GET
      ✓ should limit invoices on product to one page (42777ms)

  /api/administrator/subscriptions/product-refunds-count
    ProductRefundsCount#GET
      ✓ should count all refunds on product (59584ms)

  /api/administrator/subscriptions/product-refunds
    ProductRefunds#GET
      ✓ should limit refunds on product to one page (55179ms)

  /api/administrator/subscriptions/product-subscriptions-count
    ProductSubscriptionsCount#GET
      ✓ should count all subscriptions on product (31217ms)

  /api/administrator/subscriptions/product-subscriptions
    ProductSubscriptions#GET
      ✓ should limit subscriptions on product to one page (24896ms)

  /api/administrator/subscriptions/product
    Product#GET
      ✓ should return product data (2798ms)

  /api/administrator/subscriptions/products-count
    ProductsCount#GET
      ✓ should count products (4181ms)

  /api/administrator/subscriptions/products
    Products#GET
      ✓ should limit products to one page (5853ms)

  /api/administrator/subscriptions/published-coupons-count
    PublishedCouponsCount#GET
      ✓ should count all published coupons (6138ms)

  /api/administrator/subscriptions/published-coupons
    PublishedCoupons#GET
      ✓ should limit published coupons to one page (4745ms)

  /api/administrator/subscriptions/published-plans-count
    PublishedPlansCount#GET
      ✓ should count all published plans (10164ms)

  /api/administrator/subscriptions/published-plans
    PublishedPlans#GET
      ✓ should limit published plans to one page (7637ms)

  /api/administrator/subscriptions/published-products-count
    PublishedProductsCount#GET
      ✓ should count all published products (6134ms)

  /api/administrator/subscriptions/published-products
    PublishedProducts#GET
      ✓ should limit published products to one page (4772ms)

  /api/administrator/subscriptions/refund
    Refund#GET
      ✓ should reject invalid refund (1944ms)
      ✓ should return refund data (21424ms)

  /api/administrator/subscriptions/refunds-count
    RefundsCount#GET
      ✓ should count all refunds (60139ms)

  /api/administrator/subscriptions/refunds
    Refunds#GET
      ✓ should limit refunds to one page (64726ms)

  /api/administrator/subscriptions/reset-customer-coupon
    ResetCustomerCoupon#PATCH
      ✓ should reject invalid customerid (1926ms)
      ✓ should reject undiscounted customer (4002ms)
      ✓ should remove customer coupon (7618ms)

  /api/administrator/subscriptions/reset-subscription-coupon
    ResetSubscriptionCoupon#PATCH
      ✓ should reject invalid subscriptionid (2128ms)
      ✓ should reject undiscounted subscription (13291ms)
      ✓ should remove subscription coupon (17425ms)

  /api/administrator/subscriptions/set-charge-flagged
    SetChargeRefunded#PATCH
      ✓ should reject invalid charge (2002ms)
      ✓ should reject flagged charge (18391ms)
      ✓ should require refunded charge (13413ms)
      ✓ should update charge flagged as fraud (16319ms)

  /api/administrator/subscriptions/set-coupon-published
    SetCouponPublished#PATCH
      ✓ should reject invalid couponid (2016ms)
      ✓ should reject published coupon (3087ms)
      ✓ should publish coupon (3637ms)

  /api/administrator/subscriptions/set-coupon-unpublished
    SetCouponUnpublished#PATCH
      ✓ should reject invalid couponid (1944ms)
      ✓ should reject never published coupon (3117ms)
      ✓ should reject unpublished coupon (3934ms)
      ✓ should unpublish coupon (3579ms)

  /api/administrator/subscriptions/set-invoice-forgiven
    SetInvoiceForgiven#PATCH
      ✓ should reject invalid invoiceid (2044ms)
      ✓ should reject paid invoice (11474ms)
      ✓ should reject forgiven invoice (19564ms)
      ✓ should forgive invoice (22141ms)

  /api/administrator/subscriptions/set-plan-published
    SetPlanPublished#PATCH
      ✓ should reject invalid planid (1942ms)
      ✓ should reject published plan (4376ms)
      ✓ should publish plan (5435ms)

  /api/administrator/subscriptions/set-plan-unpublished
    SetPlanUnpublished#PATCH
      ✓ should reject invalid planid (2050ms)
      ✓ should reject never published plan (4770ms)
      ✓ should reject unpublished plan (6147ms)
      ✓ should unpublish plan (5199ms)

  /api/administrator/subscriptions/set-product-published
    SetProductPublished#PATCH
      ✓ should reject invalid productid (2838ms)
      ✓ should reject published product (2761ms)
      ✓ should publish product (3579ms)

  /api/administrator/subscriptions/set-product-unpublished
    SetProductUnpublished#PATCH
      ✓ should reject invalid productid (2899ms)
      ✓ should reject never published product (2910ms)
      ✓ should reject unpublished product (4504ms)
      ✓ should unpublish product (3929ms)

  /api/administrator/subscriptions/subscription-charges-count
    SubscriptionChargesCount#GET
      ✓ should count all charges on subscription (21395ms)

  /api/administrator/subscriptions/subscription-charges
    SubscriptionCharges#GET
      ✓ should limit charges on subscription to one page (31378ms)

  /api/administrator/subscriptions/subscription-invoices-count
    SubscriptionInvoicesCount#GET
      ✓ should count all invoices on subscription (20007ms)

  /api/administrator/subscriptions/subscription-invoices
    SubscriptionInvoices#GET
      ✓ should limit invoices on subscription to one page (27199ms)

  /api/administrator/subscriptions/subscription-refunds-count
    SubscriptionRefundsCount#GET
      1) should count all refunds on subscription

  /api/administrator/subscriptions/subscription-refunds
    SubscriptionRefunds#GET
      ✓ should limit refunds on subscription to one page (46051ms)

  /api/administrator/subscriptions/subscription
    Subscription#GET
      ✓ should reject invalid subscriptionid (1923ms)
      ✓ should return subscription data (15663ms)

  /api/administrator/subscriptions/subscriptions-count
    SubscriptionsCount#GET
      ✓ should count all subscriptions (29595ms)

  /api/administrator/subscriptions/subscriptions
    Subscriptions#GET
      ✓ should limit subscriptions to one page (21656ms)

  /api/administrator/subscriptions/unpublished-coupons-count
    UnpublishedCouponsCount#GET
      ✓ should count all unpublished coupons (9021ms)

  /api/administrator/subscriptions/unpublished-coupons
    UnpublishedCoupons#GET
      ✓ should limit unpublished coupons to one page (8273ms)

  /api/administrator/subscriptions/unpublished-plans-count
    UnpublishedPlansCount#GET
      ✓ should count all unpublished plans (12498ms)

  /api/administrator/subscriptions/unpublished-plans
    UnpublishedPlans#GET
      ✓ should limit unpublished plans to one page (12294ms)

  /api/administrator/subscriptions/unpublished-products-count
    UnpublishedProductsCount#GET
      ✓ should count all unpublished products (8625ms)

  /api/administrator/subscriptions/unpublished-products
    UnpublishedProducts#GET
      ✓ should limit unpublished products to one page (8976ms)

  /api/administrator/subscriptions/update-plan
    UpdatePlan#PATCH
      ✓ should reject invalid planid (5127ms)
      ✓ should reject invalid productid (4752ms)
      ✓ should reject unpublished plan (6459ms)
      ✓ should reject unpublished product (7057ms)
      ✓ should reject never published product (5373ms)
      ✓ should reject invalid trial (7462ms)
      ✓ should update plan (6208ms)

  /api/administrator/subscriptions/update-product
    UpdateProduct#PATCH
      ✓ should reject invalid productid (2768ms)
      ✓ should reject invalid name (2868ms)
      ✓ should reject invalid name length (2750ms)
      ✓ should reject invalid statement_descriptor (2828ms)
      ✓ should reject invalid unit_label (2719ms)
      ✓ should update product (3612ms)

  /api/user/subscriptions/card-charges-count
    CardChargesCount#GET
      ✓ should count all charges on card (21700ms)

  /api/user/subscriptions/card-charges
    CardCharges#GET
      ✓ should limit card's charges to one page (29672ms)
      2) should enforce page size
      ✓ should enforce specified offset (43069ms)

  /api/user/subscriptions/card-invoices-count
    CardInvoicesCount#GET
      3) should count all invoices on card

  /api/user/subscriptions/card-invoices
    CardInvoices#GET
      4) should limit invoices on card to one page

  /api/user/subscriptions/card-refunds-count
    CardRefundsCount#GET
      ✓ should count all refunds on card (49310ms)

  /api/user/subscriptions/card-refunds
    CardRefunds#GET
